{"ast":null,"code":"import { NgIf } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_a_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵlistener(\"click\", function LoginComponent_a_20_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.login());\n    });\n    i0.ɵɵtext(1, \" Se connecter \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_a_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function LoginComponent_a_21_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.logout());\n    });\n    i0.ɵɵtext(1, \"Se d\\u00E9connecter\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.message = 'Vous êtes déconnecté. (pikachu/pikachu)';\n  }\n  ngOnInit() {\n    this.auth = this.authService;\n  }\n  setMessage() {\n    if (this.auth.isLoggedIn) {\n      this.message = 'Vous êtes connecté.';\n    } else {\n      this.message = 'Indentifiant ou mot de passe incorrect.';\n    }\n  }\n  login() {\n    this.message = 'Tentative de connexion en cours...';\n    this.auth.login(this.name, this.password).subscribe(isLoggedIn => {\n      this.setMessage();\n      if (isLoggedIn) {\n        this.router.navigate(['/pokemons']);\n      } else {\n        this.password = '';\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n  logout() {\n    this.auth.logout();\n    this.message = 'Vous êtes déconnecté.';\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 22,\n  vars: 5,\n  consts: [[1, \"row\"], [1, \"col\", \"s12\", \"m4\", \"offset-m4\"], [1, \"card\", \"hoverable\"], [1, \"card-content\", \"center\"], [1, \"card-title\"], [\"loginForm\", \"ngForm\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card-action\", \"center\"], [\"class\", \"waves-effect waves-light btn\", 3, \"click\", 4, \"ngIf\"], [3, \"click\", 4, \"ngIf\"], [1, \"waves-effect\", \"waves-light\", \"btn\", 3, \"click\"], [3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n      i0.ɵɵtext(5, \"Page de connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\")(7, \"em\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"form\", null, 5)(11, \"div\")(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 10);\n      i0.ɵɵtemplate(20, LoginComponent_a_20_Template, 2, 0, \"a\", 11);\n      i0.ɵɵtemplate(21, LoginComponent_a_21_Template, 2, 0, \"a\", 12);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(ctx.message);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.auth.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.auth.isLoggedIn);\n    }\n  },\n  dependencies: [FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,gBAAgB;;;;;;;;ICcrCC,6BAAoF;IAAjFA;MAAAA;MAAA;MAAA,OAASA,6BAAO;IAAA,EAAC;IACnBA,8BACD;IAAAA,iBAAI;;;;;;IACJA,6BAA8C;IAA3CA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAAyBA,mCAAc;IAAAA,iBAAI;;;ADRvE,OAAM,MAAOC,cAAc;EAMzBC,YACUC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;IAPhB,YAAO,GAAW,yCAAyC;EAQvD;EAEJC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW;EAC9B;EAEAI,UAAU;IACR,IAAG,IAAI,CAACD,IAAI,CAACE,UAAU,EAAE;MACvB,IAAI,CAACC,OAAO,GAAG,qBAAqB;KACrC,MAAM;MACL,IAAI,CAACA,OAAO,GAAG,yCAAyC;;EAE5D;EAEAC,KAAK;IACH,IAAI,CAACD,OAAO,GAAG,oCAAoC;IACnD,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,QAAQ,CAAC,CACtCC,SAAS,CAAEL,UAAmB,IAAI;MACjC,IAAI,CAACD,UAAU,EAAE;MACjB,IAAGC,UAAU,EAAE;QACb,IAAI,CAACJ,MAAM,CAACU,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;OACpC,MAAM;QACL,IAAI,CAACF,QAAQ,GAAG,EAAE;QAClB,IAAI,CAACR,MAAM,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC;EACN;EAEAC,MAAM;IACJ,IAAI,CAACT,IAAI,CAACS,MAAM,EAAE;IAClB,IAAI,CAACN,OAAO,GAAG,uBAAuB;EACxC;;AAxCWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BtB,8BAAiB;MAIeA,iCAAiB;MAAAA,iBAAO;MACjDA,yBAAG;MAAIA,YAAW;MAAAA,iBAAK;MAExBA,qCAA0B;MAENA,qBAAI;MAAAA,iBAAQ;MAC9BA,iCAAqE;MAAxCA;QAAA;MAAA,EAAkB;MAA/CA,iBAAqE;MAEtEA,4BAAK;MACkBA,yBAAQ;MAAAA,iBAAQ;MACtCA,iCAAqF;MAAhDA;QAAA;MAAA,EAAsB;MAA3DA,iBAAqF;MAGvFA,gCAAgC;MAC/BA,8DAEI;MACJA,8DAAgE;MACjEA,iBAAM;;;MAjBEA,eAAW;MAAXA,iCAAW;MAKYA,eAAkB;MAAlBA,kCAAkB;MAIVA,eAAsB;MAAtBA,sCAAsB;MAIAA,eAAsB;MAAtBA,2CAAsB;MAG3DA,eAAqB;MAArBA,0CAAqB;;;iBDVrCD,WAAW,uIAAED,IAAI;EAAAyB;AAAA","names":["NgIf","FormsModule","i0","LoginComponent","constructor","authService","router","ngOnInit","auth","setMessage","isLoggedIn","message","login","name","password","subscribe","navigate","logout","selectors","standalone","features","decls","vars","consts","template","encapsulation"],"sourceRoot":"","sources":["C:\\Users\\דוד גלולה\\Desktop\\angular\\pokemon-app-master\\src\\app\\login\\login.component.ts","C:\\Users\\דוד גלולה\\Desktop\\angular\\pokemon-app-master\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { NgIf } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styles: [],\r\n    standalone: true,\r\n    imports: [FormsModule, NgIf]\r\n})\nexport class LoginComponent implements OnInit {\n  message: string = 'Vous êtes déconnecté. (pikachu/pikachu)';\n  name: string;\n  password: string;\n  auth: AuthService;\n\n  constructor(\n    private authService: AuthService, \n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.auth = this.authService;\n  }\n\n  setMessage() {\n    if(this.auth.isLoggedIn) {\n      this.message = 'Vous êtes connecté.';\n    } else {\n      this.message = 'Indentifiant ou mot de passe incorrect.'\n    }\n  }\n\n  login() {\n    this.message = 'Tentative de connexion en cours...';\n    this.auth.login(this.name, this.password)\n      .subscribe((isLoggedIn: boolean) => {\n        this.setMessage();\n        if(isLoggedIn) {\n          this.router.navigate(['/pokemons']);\n        } else {\n          this.password = '';\n          this.router.navigate(['/login']);\n        }\n      })\n  }\n\n  logout() {\n    this.auth.logout();\n    this.message = 'Vous êtes déconnecté.';\n  }\n\n}\n","<div class='row'>\n    <div class=\"col s12 m4 offset-m4\">\n     <div class=\"card hoverable\">\n      <div class=\"card-content center\">\n       <span class=\"card-title\">Page de connexion</span>\n       <p><em>{{message}}</em></p>\n      </div>\n      <form #loginForm=\"ngForm\">\n       <div>\n        <label for=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" [(ngModel)]=\"name\" name=\"name\" required>\n       </div>\n       <div>\n        <label for=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n       </div>\n      </form>\n      <div class=\"card-action center\">\n       <a (click)=\"login()\" class=\"waves-effect waves-light btn\"  *ngIf=\"!auth.isLoggedIn\">\n        Se connecter\n       </a>\n       <a (click)=\"logout()\" *ngIf=\"auth.isLoggedIn\">Se déconnecter</a>\n      </div>\n     </div>\n    </div>\n   </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}