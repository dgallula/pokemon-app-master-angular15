{"ast":null,"code":"import { enableProdMode, importProvidersFrom } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppComponent } from './app/app.component';\nimport { PokemonService } from './app/pokemon/pokemon.service';\nimport { AuthGuard } from './app/auth.guard';\nimport { provideRouter } from '@angular/router';\nimport { InMemoryDataService } from './app/in-memory-data.service';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { withInterceptorsFromDi, provideHttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nconst routes = [{\n  path: '',\n  redirectTo: 'login',\n  pathMatch: 'full'\n}, {\n  path: '',\n  canActivate: [AuthGuard],\n  providers: [PokemonService],\n  loadChildren: () => import(\"./app/pokemon/pokemon.routes\")\n}, {\n  path: 'login',\n  title: \"login\",\n  loadComponent: () => import(\"./app/login/login.component\").then(module => module.LoginComponent)\n}, {\n  path: '**',\n  title: 'Page not found',\n  loadComponent: () => import(\"./app/page-not-found/page-not-found.component\").then(module => module.PageNotFoundComponent)\n}];\nif (environment.production) {\n  enableProdMode();\n}\nbootstrapApplication(AppComponent, {\n  providers: [provideHttpClient(withInterceptorsFromDi()), importProvidersFrom(BrowserModule, FormsModule, HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n    dataEncapsulation: false\n  })), provideRouter(routes)]\n}).catch(err => console.error(err));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}