{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PokemonService = /*#__PURE__*/(() => {\n  class PokemonService {\n    constructor(http) {\n      this.http = http;\n    }\n    getPokemonList() {\n      return this.http.get('api/pokemons').pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, [])));\n    }\n    getPokemonById(pokemonId) {\n      return this.http.get(`api/pokemons/${pokemonId}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, undefined)));\n    }\n    searchPokemonList(term) {\n      if (term.length <= 1) {\n        return of([]);\n      }\n      return this.http.get(`api/pokemons/?name=${term}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, [])));\n    }\n    updatePokemon(pokemon) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.put('api/pokemons', pokemon, httpOptions).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, null)));\n    }\n    addPokemon(pokemon) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post('api/pokemons', pokemon, httpOptions).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, null)));\n    }\n    deletePokemonById(pokemonId) {\n      return this.http.delete(`api/pokemons/${pokemonId}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, null)));\n    }\n    log(response) {\n      console.table(response);\n    }\n    handleError(error, errorValue) {\n      console.error(error);\n      return of(errorValue);\n    }\n    getPokemonTypeList() {\n      return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n    }\n  }\n  PokemonService.ɵfac = function PokemonService_Factory(t) {\n    return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonService,\n    factory: PokemonService.ɵfac\n  });\n  return PokemonService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}